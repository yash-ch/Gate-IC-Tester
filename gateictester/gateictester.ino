
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

static const unsigned char PROGMEM title_array[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x06, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x02, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x1f, 0x8e, 0x3f, 0x7c, 0x39, 0xf0, 0x18, 0x0f, 0x7e, 0xfc, 0xe3, 0x3e, 0xe3, 0x7e, 0x00, 
    0x00, 0x39, 0x0f, 0x0c, 0x60, 0x3b, 0x90, 0x1f, 0x0c, 0x60, 0xcc, 0xe7, 0x30, 0xf3, 0x38, 0x00, 
    0x00, 0x30, 0x1b, 0x0c, 0x7c, 0x3b, 0x00, 0x03, 0x0e, 0x7d, 0xc0, 0xf7, 0x3e, 0xfb, 0x38, 0x00, 
    0x00, 0x31, 0x9b, 0x8c, 0x7c, 0x3b, 0x00, 0x06, 0x07, 0x7d, 0xc6, 0xff, 0x3e, 0xdf, 0x38, 0x00, 
    0x00, 0x39, 0x9f, 0x8c, 0x60, 0x3b, 0x90, 0x0e, 0x07, 0x60, 0xc6, 0xdb, 0x30, 0xcf, 0x38, 0x00, 
    0x00, 0x1f, 0xb9, 0xcc, 0x7e, 0x39, 0xf7, 0x0c, 0x0e, 0x7e, 0xfe, 0xdb, 0x3e, 0xe7, 0x38, 0x00, 
    0x00, 0x0e, 0x30, 0x8c, 0x7c, 0x10, 0xe6, 0x0c, 0x0c, 0x7c, 0x38, 0xc1, 0x3e, 0x42, 0x10, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x07, 0x1c, 0xcf, 0xc0, 0x00, 0x00, 0x1f, 0xb3, 0x1d, 0xfb, 0xf0, 0xfd, 0xf3, 0xbf, 0xfd, 0xf8, 
    0x0f, 0x1c, 0xcc, 0xe1, 0xe7, 0x9e, 0x07, 0x33, 0x9d, 0xc3, 0x38, 0x31, 0x87, 0x1c, 0xe1, 0x9c, 
    0x0f, 0x1e, 0xcc, 0x61, 0x86, 0x18, 0x06, 0x33, 0xbd, 0xfb, 0x30, 0x31, 0xf7, 0x0c, 0xfd, 0x9c, 
    0x19, 0x9b, 0xcc, 0x61, 0xf7, 0xdf, 0x06, 0x33, 0xfd, 0xfb, 0xf0, 0x31, 0xf3, 0x8c, 0xfd, 0xf8, 
    0x1f, 0x99, 0xcc, 0xe0, 0x30, 0xc3, 0x06, 0x33, 0xed, 0x83, 0x70, 0x31, 0x81, 0x8c, 0xe1, 0xb8, 
    0x3f, 0xd9, 0xcf, 0xc1, 0xf7, 0xdf, 0x07, 0x33, 0x6d, 0xfb, 0x30, 0x33, 0xf7, 0x9c, 0xfd, 0x98, 
    0x30, 0xd8, 0xcf, 0x01, 0xe7, 0x9e, 0x06, 0x32, 0x4d, 0xfb, 0x30, 0x31, 0xf2, 0x0c, 0xfd, 0x8c, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x10, 0x01, 0x98, 0x03, 0x03, 0xf8, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
    0x00, 0x00, 0x1c, 0x01, 0x99, 0x0b, 0x43, 0x0a, 0x20, 0x0a, 0x20, 0x41, 0x02, 0x38, 0x00, 0x00, 
    0x00, 0x00, 0x1e, 0xd8, 0xf7, 0xdb, 0xe6, 0x1f, 0x7b, 0x6f, 0x7b, 0xe3, 0xdf, 0x78, 0x00, 0x00, 
    0x00, 0x00, 0x13, 0xd8, 0x66, 0xdb, 0x63, 0x0b, 0x4b, 0x6b, 0x4b, 0x62, 0x5b, 0xc8, 0x00, 0x00, 
    0x00, 0x00, 0x1e, 0x70, 0x67, 0xdb, 0x63, 0xeb, 0x7b, 0xeb, 0x7b, 0x63, 0xdb, 0x78, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x03, 0x10, 0x18, 0x40, 0x24, 0x01, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x07, 0x30, 0x18, 0x58, 0x64, 0x01, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x07, 0xbe, 0xdf, 0x5c, 0x67, 0xb7, 0xf6, 0xf0, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x0d, 0xb2, 0xdb, 0x58, 0x34, 0xb5, 0x95, 0xb0, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x0f, 0xbe, 0x5b, 0x58, 0x34, 0xb5, 0xf7, 0xb0, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x08, 0xd6, 0xdb, 0x5c, 0x64, 0xbc, 0xb6, 0xf0, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x01, 0x80, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x03, 0x68, 0xc4, 0xc3, 0x14, 0x91, 0xe4, 0xb6, 0x32, 0xc0, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x03, 0x6f, 0xad, 0x87, 0xbe, 0xb1, 0xfd, 0xbf, 0x7b, 0xc0, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x03, 0xc9, 0xe4, 0xc4, 0x96, 0xb1, 0xbd, 0xa2, 0x4a, 0x40, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x03, 0x0c, 0xed, 0xc7, 0xf6, 0x61, 0xe7, 0xbb, 0x7a, 0x40, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

bool isTitleScreenButtonPressed = false;
int pointer = 0;
int menuStartIndex = 0;

static const String menu_array[] = {
  "1. Test 14 Pin Gate     IC",
  "2. Test 555 Timer  IC",
  "3. Test 7 Segment       Display",
  "4. About This Project",
};
void setup() {
  Serial.begin(115200);

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
    for(;;);
  }
  delay(2000);
  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(WHITE);
  
  // Display Title Image
  display.drawBitmap(0, 5, title_array, 128, 64, 1);
  display.display(); 
}

int menu(int resistorValue){
  display.setTextSize(2);
  display.setCursor(0, 0);
  display.print("Menu");
  int gap = 20;
  display.setTextSize(1);
  for(int i = menuStartIndex; i<4; i++){  
    if(i==menuStartIndex){
      display.setCursor(0, 20);    
    }else if(menu_array[i-1].length() >21){
     gap += 20;
     display.setCursor(0, gap); 
    }else if(menu_array[i-1].length()+2 >21 && i-1 == pointer){
      gap += 20;
      display.setCursor(0, gap);
    }else{
      gap += 12;
      display.setCursor(0, gap);
    }
    
    if(pointer == i){
      display.print("> ");
    }
    display.print(menu_array[i]);
    display.display();
  }
  if(resistorValue > 450 && resistorValue < 460 && pointer > 0){
    pointer--;
    display.clearDisplay();
  }else if(resistorValue > 505 && resistorValue < 515 && pointer < 3){
    pointer++;
    display.clearDisplay();
  }
  if(pointer == 3){
    menuStartIndex = 1;
  }else if(pointer == 0){
    menuStartIndex = 0;
  }
  return 0;
}
void loop() {
  
  int resistorValue = analogRead(A0);
  if(resistorValue >100 && isTitleScreenButtonPressed == false){
    isTitleScreenButtonPressed = true;
    display.clearDisplay();
    display.setCursor(0, 23);
    display.setTextSize(2);
    display.println("Welcome :)");
    display.display(); 
    delay(500);
    display.clearDisplay();
  }
  if(isTitleScreenButtonPressed == true){
    menu(resistorValue);
  }
}

//up button 450-460
//down button 505-515
//left button 735-747
//right button 695-705
